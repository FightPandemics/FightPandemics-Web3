/// <reference types="node" />
export declare const isNotSet: (v: any) => boolean;
export declare const isSet: (v: any) => boolean;
export declare const remove0x: (v: string) => string;
export declare const prepend0x: (v: string) => string;
export declare const isHex: (v: string) => boolean;
export declare const isZeroHex: (v: string) => boolean;
export declare const isPrivateKey: (v: string) => boolean;
export declare const isEthereumAddress: (v: string) => boolean;
export declare const isSignature: (sig: string | undefined) => boolean;
export declare const isTimestamp: (t: number) => boolean;
export declare const intToBuffer: (i: number) => Buffer;
export declare const strToBytes32: (str: string) => string;
export declare const currentTimestamp: () => number;
export declare const xor: (a: boolean, b: boolean) => boolean;
export declare const getKeyValue: <T extends object, U extends keyof T>(obj: T) => (key: string) => T[keyof T];
//# sourceMappingURL=helpers.d.ts.map